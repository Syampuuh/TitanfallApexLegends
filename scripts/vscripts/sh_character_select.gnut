  

#if SERVER || CLIENT || UI
global function Survival_DoesTeamHaveCharacter
global function Survival_HasPlayerLockedInCharacter
#endif

#if UI
global function ServerToUI_CharacterLockRejected
#endif

#if UI
table<int, bool> PROTO_playerCharacterLockStateMap = {}
void function ClientToUI_OnPlayerUpdatedCharacterLock( bool clearAllHack, EHI playerEHI, bool locked )
{
	if ( clearAllHack )
		PROTO_playerCharacterLockStateMap = {}

	PROTO_playerCharacterLockStateMap[playerEHI] <- locked

	                                                                    
	                                   
}
#endif

#if SERVER || CLIENT || UI
bool function Survival_HasPlayerLockedInCharacter( EHI playerEHI )
{
	#if SERVER || CLIENT
		entity player = FromEHI( playerEHI )
		if ( player == null || !IsValid( player ) )
			return false

		if ( Time() > GetGlobalNetTime( "allSquadsPresentationStartTime" ) && GetGlobalNetTime( "allSquadsPresentationStartTime" ) != -1 )
			return true

		return player.GetPlayerNetBool( CHARACTER_SELECT_NETVAR_HAS_LOCKED_IN_CHARACTER )
	#elseif UI
		              
		if ( playerEHI in PROTO_playerCharacterLockStateMap )
			return PROTO_playerCharacterLockStateMap[playerEHI]
		return false
	#endif
}
#endif

#if SERVER || CLIENT || UI
bool function Survival_DoesTeamHaveCharacter( int team, ItemFlavor checkCharacter, EHI ignorePlayerEHI = EHI_null )
{
	foreach ( EHI teammateEHI in GetPlayerEHIArrayOfTeam( team ) )
	{
		if ( ignorePlayerEHI != EHI_null && teammateEHI == ignorePlayerEHI )
			continue

		if ( !Survival_HasPlayerLockedInCharacter( teammateEHI ) )
			continue

		if ( LoadoutSlot_IsReady( teammateEHI, Loadout_Character() ) )
		{
			if ( LoadoutSlot_GetItemFlavor( teammateEHI, Loadout_Character() ) == checkCharacter )
				return true
		}
	}

	return false
}
#endif

#if UI
void function DisableReadyMode()
{
	                                              
	  
	                                             
	  
	                                      
	                                                  
	                                     
	  
	                                                    
}
#endif

#if UI
void function ServerToUI_CharacterLockRejected()
{
	                    
	                                           
}
#endif